module;

#include <raylib.h>
#include "tmx.hpp"

export module tile_map;

import<memory>;

static inline auto int_to_color(int color) -> Color {
  auto res = tmx_col_to_bytes(color);
  return *reinterpret_cast<Color*>(&res);
}

export struct TileMap final {
 private:
  std::unique_ptr<tmx_map> tmap_;

 public:
  TileMap(const char* path, tmx_resource_manager* mgr)
      : tmap_(tmx_rcmgr_load(mgr, path)) {}

  TileMap(TileMap&& other) { tmap_.swap(other.tmap_); }

  ~TileMap() { tmx_map_free(tmap_.release()); }
};
